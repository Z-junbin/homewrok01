/*
一、
答案：10 for循环体循环结束i=10，外部调用a[i]时，对应的函数里面的i都是10

二、
答案：ReferenceError  let的暂时性死区

三、
答案：Math.min(...arr)

四、
答案：
使用var声明的变量，其作用域为该语句所在的函数内，可以重复声明且存在变量提升现象；
使用let声明的变量，其作用域为该语句所在的代码块内，不可以重复声明，存在暂时性死区，不存在变量提升；
使用const声明的是常量，满足let的所有特性，并且在后面出现的代码中不能再修改该常量的值。

五、
答案：20 箭头函数的this指向对应的对象中

六：
答案：
定义对象的属性名，因为值是唯一的，不会与其他属性名冲突

七、
答案：
浅拷贝：当原对象有引用值的属性值时，拷贝对象和原对象对应的两个属性值指向同一个引用
深拷贝：当原对象有引用值的属性值时，拷贝对象和原对象对应的那个值开辟新的内存，与原来的不会互相影响

八、
答案：ts是js的超集 本质上向js语言添加了可选的静态类型和基于类的面向对象编程

九、
答案：
优点：增加了代码的可读性和可维护性
缺点：需要一定的学习成本

十、
答案：
工作原理：1.设置引用数，判断当前是否为0
        2.引用计数器
        3.引用关系改变时修改应用数字
        4.引用数为0时，立即回收
优：发现垃圾时马上回收、最大限定减少程序的暂停
缺：无法回收循环对象，时间开销大

十一、
答案：1.遍历所有对象找标志的活动对象
     2.遍历所有对象清除没有标记的对象并执行整理，移动对象的位置

十二、
答案;
    1.回收过程采用复制算法和标记整理算法
    2.新生代内存分为2个等大的空间
    3.使用的空间为From，空闲的空间为To
    4.活动对象存储在From中
    5.标记整理后将活动对象拷贝至To
    6.From和To进行空间交换

十三、
答案：
执行时间：回收老生代对象
工作原理：将垃圾回收的的操作分为多个片段


*/